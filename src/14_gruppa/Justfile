grub_cfg      := "grub.cfg"
linker_script := "linker.ld"
target        := "x86_64-os"
iso           := "build/os-x86_64.iso"
kernel        := "build/kernel-x86_64.bin"
rust_os       := "target/x86_64-os/debug/libos.a"

default: run

@build_kernel:
    cargo build -Zbuild-std --target {{target}}.json
    sh -c '\
    mkdir -p build/asm && obj_files="" && \
    for file in src/asm/*.asm; do \
        filename=$(basename "$file" .asm); \
        out_file="build/asm/$filename.o"; \
        nasm -felf64 "$file" -o "$out_file"; \
        obj_files="$obj_files $out_file"; \
    done && \
    ld -n --gc-sections -T {{linker_script}} -o {{kernel}} $obj_files {{rust_os}} 2>/dev/null'

@build: build_kernel
    mkdir -p build/isofiles/boot/grub
    cp {{kernel}} build/isofiles/boot/kernel.bin
    cp {{grub_cfg}} build/isofiles/boot/grub
    grub-mkrescue -o {{iso}} build/isofiles 2> /dev/null
    rm -r build/isofiles

@run: build
    echo "Running..."
    qemu-system-x86_64 -cdrom {{iso}}